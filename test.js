'use strict';

const expect = require('chai').expect;
const tick = require('./tick');

describe("Game of Life", function() {
	describe("Generation", function() {
		it("Blinker", function() {
			var grid = [
				['.', '.', '.', '.', '.', '.', '.', '.'],
				['.', '0', '.', '.', '.', '.', '.', '.'],
				['.', '0', '.', '.', '.', '.', '.', '.'],
				['.', '0', '.', '.', '0', '0', '0', '.'],
				['.', '.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.', '.']
			];

			var expectedGrid = [
				['.', '.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.', '.'],
				['0', '0', '0', '.', '.', '0', '.', '.'],
				['.', '.', '.', '.', '.', '0', '.', '.'],
				['.', '.', '.', '.', '.', '0', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.', '.']
			];

			var newGrid = tick(grid, 5, 7);

			expect(newGrid).to.deep.equal(expectedGrid);
		});
		it("Tub", function() {
			var grid = [
				['.', '.', '.', '.'],
				['.', '0', '.', '.'],
				['0', '.', '0', '.'],
				['.', '0', '.', '.'],
				['.', '.', '.', '.']
			];

			var expectedGrid = [
				['.', '.', '.', '.'],
				['.', '0', '.', '.'],
				['0', '.', '0', '.'],
				['.', '0', '.', '.'],
				['.', '.', '.', '.']
			];

			var newGrid = tick(grid, 4, 3);

			expect(newGrid).to.deep.equal(expectedGrid);
		});
		it("Box", function() {
			var grid = [
				['.', '.', '.', '.', '.', '.', '.', '.'],
				['.', '0', '0', '.', '.', '.', '.', '.'],
				['.', '0', '0', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.', '.']
			];

			var expectedGrid = [
				['.', '.', '.', '.', '.', '.', '.', '.'],
				['.', '0', '0', '.', '.', '.', '.', '.'],
				['.', '0', '0', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.', '.']
			];

			var newGrid = tick(grid, 5, 7);

			expect(newGrid).to.deep.equal(expectedGrid);
		});
		it("Beacon", function() {
			var grid = [
				['.', '.', '.', '.', '.', '.', '.', '.'],
				['.', '0', '0', '.', '.', '.', '.', '.'],
				['.', '0', '0', '.', '.', '.', '.', '.'],
				['.', '.', '.', '0', '0', '.', '.', '.'],
				['.', '.', '.', '0', '0', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.', '.']
			];

			var expectedGrid = [
				['.', '.', '.', '.', '.', '.', '.', '.'],
				['.', '0', '0', '.', '.', '.', '.', '.'],
				['.', '0', '.', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '0', '.', '.', '.'],
				['.', '.', '.', '0', '0', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.', '.']
			];

			var newGrid = tick(grid, 5, 7);

			expect(newGrid).to.deep.equal(expectedGrid);
		});
		it("Beehive", function() {
			var grid = [
				['.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '0', '0', '.', '.', '.'],
				['.', '0', '.', '.', '0', '.', '.'],
				['.', '0', '.', '.', '0', '.', '.'],
				['.', '.', '0', '0', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.']
			];

			var expectedGrid = [
				['.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '0', '0', '.', '.', '.'],
				['.', '0', '.', '.', '0', '.', '.'],
				['.', '0', '.', '.', '0', '.', '.'],
				['.', '.', '0', '0', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.']
			];

			var newGrid = tick(grid, 5, 6);

			expect(newGrid).to.deep.equal(expectedGrid);
		});
		it("Glider", function() {
			var grid = [
				['.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '0', '.', '.'],
				['.', '.', '0', '.', '0', '.', '.'],
				['.', '.', '.', '0', '0', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.']
			];

			var expectedGrid = [
				['.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '.', '0', '.', '.', '.'],
				['.', '.', '.', '.', '0', '0', '.'],
				['.', '.', '.', '0', '0', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.']
			];

			var newGrid = tick(grid, 5, 6);

			expect(newGrid).to.deep.equal(expectedGrid);
		});
		it("Toad", function() {
			var grid = [
				['.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.'],
				['.', '0', '0', '0', '.', '.', '.'],
				['.', '.', '0', '0', '0', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.']
			];

			var expectedGrid = [
				['.', '.', '.', '.', '.', '.', '.'],
				['.', '.', '0', '.', '.', '.', '.'],
				['.', '0', '.', '.', '0', '.', '.'],
				['.', '0', '.', '.', '0', '.', '.'],
				['.', '.', '.', '0', '.', '.', '.'],
				['.', '.', '.', '.', '.', '.', '.']
			];

			var newGrid = tick(grid, 5, 6);

			expect(newGrid).to.deep.equal(expectedGrid);
		});
	});
});
